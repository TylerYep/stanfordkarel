[project]
name = "stanfordkarel"
version = "0.2.7"
description = "Official Stanford Karel library used in CS 106A"
authors = [
    { name = "Tyler Yep", email = "tyep@cs.stanford.edu" },
]
readme = "README.md"
license = "MIT"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"

[dependency-groups]
dev = [
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "ruff",
    "types-setuptools",
]

[project.urls]
Homepage = "https://github.com/tyleryep/stanford-karel"

[build-system]
requires = [
    "setuptools>=61.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "stanfordkarel",
]
include-package-data = true

[tool.setuptools.package-data]
stanfordkarel = [
    "py.typed",
]

[tool.mypy]
strict = true
warn_unreachable = true
disallow_any_unimported = true
extra_checks = true
enable_error_code = "ignore-without-code"

[[tool.mypy.overrides]]
module = [
    "problems.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "solutions.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "tests.programs.*",
]
ignore_errors = true

[tool.ruff]
target-version = "py313"
lint.select = ["ALL"]
lint.ignore = [
	"ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
	"C901",    # function is too complex (12 > 10)
	"COM812",  # Trailing comma missing
	"D",       # Docstring rules
	"EM101",   # Exception must not use a string literal, assign to variable first
	"EM102",   # Exception must not use an f-string literal, assign to variable first
	"ERA001",  # Found commented-out code
	"FBT001",  # Boolean positional arg in function definition
	"FBT002",  # Boolean default value in function definition
	"FBT003",  # Boolean positional value in function call
	"FIX002",  # Line contains TODO
	"PLR0911", # Too many return statements (11 > 6)
	"PLR2004", # Magic value used in comparison, consider replacing 2 with a constant variable
	"PLR0912", # Too many branches
	"PLR0913", # Too many arguments to function call
	"PLR0915", # Too many statements
	"S101",    # Use of `assert` detected
	"S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
	"T201",    # print() found
	"T203",    # pprint() found
	"TD002",   # Missing author in TODO; try: `# TODO(<author_name>): ...`
	"TD003",   # Missing issue link on the line following this TODO
	"TD005",   # Missing issue description after `TODO`
	"TRY003",  # Avoid specifying long messages outside the exception class

	# stanfordkarel-specific ignores
	"ANN201", # Missing return type annotation for public function `main`
	"F403",   # `from stanfordkarel import *` used; unable to detect undefined names
	"F405",   # `run_karel_program` may be undefined, or defined from star imports: `stanfordkarel`
	"RUF001", # String contains ambiguous `❯`
	"RUF003", # Comment contains ambiguous `–` (EN DASH).
]
