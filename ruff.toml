target-version = "py38"
lint.select = ["ALL"]
lint.ignore = [
	"ANN101",  # Missing type annotation for `self` in method
	"ANN102",  # Missing type annotation for `cls` in classmethod
	"ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
	"C901",    # function is too complex (12 > 10)
	"COM812",  # Trailing comma missing
	"D",       # Docstring rules
	"EM101",   # Exception must not use a string literal, assign to variable first
	"EM102",   # Exception must not use an f-string literal, assign to variable first
	"ERA001",  # Found commented-out code
	"FBT001",  # Boolean positional arg in function definition
	"FBT002",  # Boolean default value in function definition
	"FBT003",  # Boolean positional value in function call
	"FIX002",  # Line contains TODO
	"ISC001",  # Isort
	"PLR0911", # Too many return statements (11 > 6)
	"PLR2004", # Magic value used in comparison, consider replacing 2 with a constant variable
	"PLR0912", # Too many branches
	"PLR0913", # Too many arguments to function call
	"PLR0915", # Too many statements
	"S101",    # Use of `assert` detected
	"S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
	"T201",    # print() found
	"T203",    # pprint() found
	"TD002",  # Missing author in TODO; try: `# TODO(<author_name>): ...`
	"TD003",  # Missing issue link on the line following this TODO
	"TD005",  # Missing issue description after `TODO`
	"TRY003", # Avoid specifying long messages outside the exception class

	# stanfordkarel-specific ignores
	"ANN201", # Missing return type annotation for public function `main`
	"F403",   # `from stanfordkarel import *` used; unable to detect undefined names
	"F405",   # `run_karel_program` may be undefined, or defined from star imports: `stanfordkarel`
	"RUF001", # String contains ambiguous `❯`
	"RUF003", # Comment contains ambiguous `–` (EN DASH).
]

[lint.flake8-pytest-style]
fixture-parentheses = false
